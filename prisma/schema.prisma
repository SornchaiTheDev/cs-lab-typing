// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model users {
  id           Int           @id @default(autoincrement())
  student_id   String        @unique
  full_name    String
  email        String        @unique
  password     String?
  last_logined DateTime?
  created_at   DateTime      @default(now())
  updated_at   DateTime?     @updatedAt
  deleted_at   DateTime?
  roles        roles[]       @relation("user_role")
  auth_loggers auth_logger[]
}

model roles {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  users      users[]   @relation("user_role")
}

model auth_logger {
  id         Int       @id @default(autoincrement())
  type       String
  date       DateTime  @default(now())
  user       users     @relation(fields: [user_id], references: [id])
  user_id    Int
  ip_address String
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
}

model semester {
  id         Int       @id @default(autoincrement())
  year       String
  term       String
  startDate  DateTime
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  @@unique([year, term])
}
